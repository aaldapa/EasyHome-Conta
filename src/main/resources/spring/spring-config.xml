<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:jdbc="http://www.springframework.org/schema/jdbc"
		xmlns:p="http://www.springframework.org/schema/p"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                            http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                            http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<context:component-scan base-package="com.easyhomeconta" />

<!-- ========================= DEFINICION DEL DATASOURCE ========================= -->
         
<!--     Configurador que reemplaza los ${...} con los valores del archivo .properties 
    	(En este caso, relacionado con la configuracion JDBC para las definiciones del dataSource de abajo) -->
	<context:property-placeholder location="classpath:db/jdbc.properties"/>

	<!-- enables scanning for @Transactional annotations -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!--  Configuracion del dataSource-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      	<property name="driverClassName" value="${jdbc.driverClassName}"/>
      	<property name="url" value="${jdbc.url}"/>
      	<property name="username"  value="${jdbc.username}"/>
      	<property name="password" value="${jdbc.password}"/>
   </bean>
   
   <!-- Inicializador de base de datos. Si algun script falla, la inicializacion se para. -->
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="${jdbc.initLocation}"/>
    </jdbc:initialize-database>
   
   <bean id="entityManager" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="packagesToScan" value="com.easyhomeconta.model" />
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="${jpa.showSql}" p:generateDdl="${jpa.generateDdl}"/>
      </property>
      <property name="jpaProperties">
			<value>
				hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.c3p0.acquire_increment=1
				hibernate.c3p0.idle_test_period=100
				hibernate.c3p0.max_size=1000
				hibernate.c3p0.max_statements=0
				hibernate.c3p0.min_size=10
				hibernate.c3p0.timeout=100
			</value>
		</property>
   </bean>
   
   <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManager" />
   </bean>
   
   <tx:annotation-driven />

    <!-- Inicializador de base de datos. Si algun script falla, la inicializacion se para. -->
<!--     <jdbc:initialize-database data-source="dataSource"> -->
<!--         <jdbc:script location="${jdbc.initLocation}"/> -->
<!--     </jdbc:initialize-database> -->
    
    <!-- Inicializador de base de datos. Si algun script falla, la inicializacion se para. -->
<!--     <jdbc:initialize-database data-source="dataSource"> -->
<!--         <jdbc:script location="${jdbc.initLocation}"/> -->
<!--     </jdbc:initialize-database> -->

	<!-- Por defecto, Spring no permite las anotaciones @PostConstructor and @PreDestroy. Esta injeccion se realiza para activarlas -->
	<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />

	<!-- Spring no tiene el tipo de scope view pero se puede configurar un scope personalizado extendiendo la clase Scope y registrando el bean en el spring-config -->
	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="com.easyhomeconta.scope.ViewScope"/>
                </entry>
            </map>
        </property>
    </bean>
</beans>
